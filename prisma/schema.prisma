generator client {
     provider = "prisma-client-js"
}

datasource db {
     provider = "postgresql"
     url      = env("DATABASE_URL")
}

model Users {
     id             Int         @id @default(autoincrement()) @db.Integer
     username       String      @unique @db.VarChar(255)
     email          String      @unique @db.VarChar(255)
     password       String      @db.VarChar(255)
     password_salt  String      @db.VarChar(255)
     plain_password String      @db.VarChar(255)
     api_key        String      @unique @db.VarChar(255)
     type_id        Int         @db.SmallInt
     status_id      Int         @db.SmallInt
     created_at     DateTime    @default(now()) @db.Timestamptz()
     updated_at     DateTime?   @updatedAt @db.Timestamptz()
     Status         User_status @relation(fields: [status_id], references: [id])
     Type           User_type   @relation(fields: [type_id], references: [id])
     Files          Metadata[]
}

model Metadata {
     id               String      @id @default(cuid()) @db.VarChar(255)
     file_name        String      @db.Text
     file_mime        String      @db.VarChar(60)
     file_path        String      @db.Text
     file_size        Int         @db.Integer
     related_api_key  String      @db.VarChar(255)
     uploaded_by_path Boolean     @default(false) @db.Boolean
     status_id        Int         @db.SmallInt
     created_at       DateTime    @default(now()) @db.Timestamptz()
     updated_at       DateTime?   @updatedAt @db.Timestamptz()
     User             Users       @relation(fields: [related_api_key], references: [api_key])
     Status           File_status @relation(fields: [status_id], references: [id])
}

// Regulatory Fields 

model User_status {
     id         Int       @id @default(autoincrement()) @db.SmallInt
     name       String    @db.VarChar(255)
     created_at DateTime  @default(now()) @db.Timestamptz()
     updated_at DateTime? @updatedAt @db.Timestamptz()
     Users      Users[]
}

model User_type {
     id         Int       @id @default(autoincrement()) @db.SmallInt
     name       String    @db.VarChar(255)
     created_at DateTime  @default(now()) @db.Timestamptz()
     updated_at DateTime? @updatedAt @db.Timestamptz()
     Users      Users[]
}

model File_status {
     id         Int        @id @default(autoincrement()) @db.SmallInt
     name       String     @db.VarChar(255)
     created_at DateTime   @default(now()) @db.Timestamptz()
     updated_at DateTime?  @updatedAt @db.Timestamptz()
     Metadata   Metadata[]
}
